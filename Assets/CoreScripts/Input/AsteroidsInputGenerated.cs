//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.4.4
//     from Assets/Input/AsteroidsInput.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

namespace Asteroid.Input
{
    public partial class @AsteroidsInputGenerated : IInputActionCollection2, IDisposable
    {
        public InputActionAsset asset { get; }
        public @AsteroidsInputGenerated()
        {
            asset = InputActionAsset.FromJson(@"{
    ""name"": ""AsteroidsInput"",
    ""maps"": [
        {
            ""name"": ""GameplayMap"",
            ""id"": ""9bc0c1fa-c8ed-466d-baf9-c205d2147ea0"",
            ""actions"": [
                {
                    ""name"": ""Forward"",
                    ""type"": ""Button"",
                    ""id"": ""daf6350e-000a-4e74-ba1d-2ba03c408077"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Backward"",
                    ""type"": ""Button"",
                    ""id"": ""f1358783-ac0f-49a4-b5a3-0f1fff3a88dd"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""RotateLeft"",
                    ""type"": ""Button"",
                    ""id"": ""0e5ed9bd-519f-42b3-be16-0cee82a363a8"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""RotateRight"",
                    ""type"": ""Button"",
                    ""id"": ""24325f11-2ac3-48fc-bcba-ae9b7e2ef538"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Fire"",
                    ""type"": ""Button"",
                    ""id"": ""1c210d9d-a014-4b79-be49-6242932b5de6"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Pause"",
                    ""type"": ""Button"",
                    ""id"": ""7e8043dd-75fe-4b2b-8836-46cadfbcbab4"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""bcd83e72-c983-4fed-a826-ad6fe4c071ab"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Forward"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0e69539d-e497-4f66-ac86-b66926f2e7ed"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Forward"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a6ebdd6a-7178-4833-96e9-201ce02ceb88"",
                    ""path"": ""<Gamepad>/leftStick/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Forward"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""11d2cc35-76be-42d4-9bb9-15a9eb7ed756"",
                    ""path"": ""<Gamepad>/dpad/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Forward"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b8c33bb0-c55a-4cb1-a3c9-86ce3171b3be"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Backward"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4815179d-fcc5-489d-90a2-d8ac2fcd0e58"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Backward"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""7d1ae610-76e9-418c-92ff-a37f753fa954"",
                    ""path"": ""<Gamepad>/leftStick/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Backward"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9cea8014-d676-4633-b3cd-6905d823aab3"",
                    ""path"": ""<Gamepad>/dpad/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Backward"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b471cb8a-7e52-4809-b68b-73d0f461b358"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RotateLeft"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c534837a-15f4-4ae7-9879-e8845544bec7"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RotateLeft"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""7cf2a725-ec89-4374-b76d-1031378e0c49"",
                    ""path"": ""<Gamepad>/leftStick/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RotateLeft"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""49b838d9-7fd8-4bbb-a9f0-76fefe0088ac"",
                    ""path"": ""<Gamepad>/dpad/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RotateLeft"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c15024ef-d533-45b1-a84a-b75adefd9509"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RotateRight"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""3f254abf-c746-4404-8d01-511f6d9e0b7e"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RotateRight"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ae2006d4-4539-4c68-80a9-1eb8de9b08cb"",
                    ""path"": ""<Gamepad>/leftStick/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RotateRight"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f1389bcd-11f2-441c-975d-6e8bfb5bed91"",
                    ""path"": ""<Gamepad>/dpad/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RotateRight"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f06bd0b2-43e4-4951-99cd-d171d89af21a"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Fire"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0b3c1744-b034-481d-bd21-52444e1fdffd"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Fire"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6aaaae3f-5df7-49a5-b858-4a4fd387e334"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Pause"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""32e262e8-ac00-4c3e-802f-e62a49da3c2e"",
                    ""path"": ""<Gamepad>/select"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Pause"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
            // GameplayMap
            m_GameplayMap = asset.FindActionMap("GameplayMap", throwIfNotFound: true);
            m_GameplayMap_Forward = m_GameplayMap.FindAction("Forward", throwIfNotFound: true);
            m_GameplayMap_Backward = m_GameplayMap.FindAction("Backward", throwIfNotFound: true);
            m_GameplayMap_RotateLeft = m_GameplayMap.FindAction("RotateLeft", throwIfNotFound: true);
            m_GameplayMap_RotateRight = m_GameplayMap.FindAction("RotateRight", throwIfNotFound: true);
            m_GameplayMap_Fire = m_GameplayMap.FindAction("Fire", throwIfNotFound: true);
            m_GameplayMap_Pause = m_GameplayMap.FindAction("Pause", throwIfNotFound: true);
        }

        public void Dispose()
        {
            UnityEngine.Object.Destroy(asset);
        }

        public InputBinding? bindingMask
        {
            get => asset.bindingMask;
            set => asset.bindingMask = value;
        }

        public ReadOnlyArray<InputDevice>? devices
        {
            get => asset.devices;
            set => asset.devices = value;
        }

        public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

        public bool Contains(InputAction action)
        {
            return asset.Contains(action);
        }

        public IEnumerator<InputAction> GetEnumerator()
        {
            return asset.GetEnumerator();
        }

        IEnumerator IEnumerable.GetEnumerator()
        {
            return GetEnumerator();
        }

        public void Enable()
        {
            asset.Enable();
        }

        public void Disable()
        {
            asset.Disable();
        }
        public IEnumerable<InputBinding> bindings => asset.bindings;

        public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
        {
            return asset.FindAction(actionNameOrId, throwIfNotFound);
        }
        public int FindBinding(InputBinding bindingMask, out InputAction action)
        {
            return asset.FindBinding(bindingMask, out action);
        }

        // GameplayMap
        private readonly InputActionMap m_GameplayMap;
        private IGameplayMapActions m_GameplayMapActionsCallbackInterface;
        private readonly InputAction m_GameplayMap_Forward;
        private readonly InputAction m_GameplayMap_Backward;
        private readonly InputAction m_GameplayMap_RotateLeft;
        private readonly InputAction m_GameplayMap_RotateRight;
        private readonly InputAction m_GameplayMap_Fire;
        private readonly InputAction m_GameplayMap_Pause;
        public struct GameplayMapActions
        {
            private @AsteroidsInputGenerated m_Wrapper;
            public GameplayMapActions(@AsteroidsInputGenerated wrapper) { m_Wrapper = wrapper; }
            public InputAction @Forward => m_Wrapper.m_GameplayMap_Forward;
            public InputAction @Backward => m_Wrapper.m_GameplayMap_Backward;
            public InputAction @RotateLeft => m_Wrapper.m_GameplayMap_RotateLeft;
            public InputAction @RotateRight => m_Wrapper.m_GameplayMap_RotateRight;
            public InputAction @Fire => m_Wrapper.m_GameplayMap_Fire;
            public InputAction @Pause => m_Wrapper.m_GameplayMap_Pause;
            public InputActionMap Get() { return m_Wrapper.m_GameplayMap; }
            public void Enable() { Get().Enable(); }
            public void Disable() { Get().Disable(); }
            public bool enabled => Get().enabled;
            public static implicit operator InputActionMap(GameplayMapActions set) { return set.Get(); }
            public void SetCallbacks(IGameplayMapActions instance)
            {
                if (m_Wrapper.m_GameplayMapActionsCallbackInterface != null)
                {
                    @Forward.started -= m_Wrapper.m_GameplayMapActionsCallbackInterface.OnForward;
                    @Forward.performed -= m_Wrapper.m_GameplayMapActionsCallbackInterface.OnForward;
                    @Forward.canceled -= m_Wrapper.m_GameplayMapActionsCallbackInterface.OnForward;
                    @Backward.started -= m_Wrapper.m_GameplayMapActionsCallbackInterface.OnBackward;
                    @Backward.performed -= m_Wrapper.m_GameplayMapActionsCallbackInterface.OnBackward;
                    @Backward.canceled -= m_Wrapper.m_GameplayMapActionsCallbackInterface.OnBackward;
                    @RotateLeft.started -= m_Wrapper.m_GameplayMapActionsCallbackInterface.OnRotateLeft;
                    @RotateLeft.performed -= m_Wrapper.m_GameplayMapActionsCallbackInterface.OnRotateLeft;
                    @RotateLeft.canceled -= m_Wrapper.m_GameplayMapActionsCallbackInterface.OnRotateLeft;
                    @RotateRight.started -= m_Wrapper.m_GameplayMapActionsCallbackInterface.OnRotateRight;
                    @RotateRight.performed -= m_Wrapper.m_GameplayMapActionsCallbackInterface.OnRotateRight;
                    @RotateRight.canceled -= m_Wrapper.m_GameplayMapActionsCallbackInterface.OnRotateRight;
                    @Fire.started -= m_Wrapper.m_GameplayMapActionsCallbackInterface.OnFire;
                    @Fire.performed -= m_Wrapper.m_GameplayMapActionsCallbackInterface.OnFire;
                    @Fire.canceled -= m_Wrapper.m_GameplayMapActionsCallbackInterface.OnFire;
                    @Pause.started -= m_Wrapper.m_GameplayMapActionsCallbackInterface.OnPause;
                    @Pause.performed -= m_Wrapper.m_GameplayMapActionsCallbackInterface.OnPause;
                    @Pause.canceled -= m_Wrapper.m_GameplayMapActionsCallbackInterface.OnPause;
                }
                m_Wrapper.m_GameplayMapActionsCallbackInterface = instance;
                if (instance != null)
                {
                    @Forward.started += instance.OnForward;
                    @Forward.performed += instance.OnForward;
                    @Forward.canceled += instance.OnForward;
                    @Backward.started += instance.OnBackward;
                    @Backward.performed += instance.OnBackward;
                    @Backward.canceled += instance.OnBackward;
                    @RotateLeft.started += instance.OnRotateLeft;
                    @RotateLeft.performed += instance.OnRotateLeft;
                    @RotateLeft.canceled += instance.OnRotateLeft;
                    @RotateRight.started += instance.OnRotateRight;
                    @RotateRight.performed += instance.OnRotateRight;
                    @RotateRight.canceled += instance.OnRotateRight;
                    @Fire.started += instance.OnFire;
                    @Fire.performed += instance.OnFire;
                    @Fire.canceled += instance.OnFire;
                    @Pause.started += instance.OnPause;
                    @Pause.performed += instance.OnPause;
                    @Pause.canceled += instance.OnPause;
                }
            }
        }
        public GameplayMapActions @GameplayMap => new GameplayMapActions(this);
        public interface IGameplayMapActions
        {
            void OnForward(InputAction.CallbackContext context);
            void OnBackward(InputAction.CallbackContext context);
            void OnRotateLeft(InputAction.CallbackContext context);
            void OnRotateRight(InputAction.CallbackContext context);
            void OnFire(InputAction.CallbackContext context);
            void OnPause(InputAction.CallbackContext context);
        }
    }
}
